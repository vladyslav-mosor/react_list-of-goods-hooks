{"version":3,"sources":["App.tsx","components/GoodsList/GoodsList.tsx","index.tsx"],"names":["SortType","GoodsList","goods","map","good","goodsFromServer","App","useState","isReversed","setReverse","NONE","sortType","setSortType","sortByType","type","isResetVisible","visibleGoods","sort","previousGood","currentGood","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","classNames","onClick","current","ReactDOM","render","document","getElementById"],"mappings":"6KAmBKA,E,0ECfQC,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBACE,UAAQ,OADV,SAIGA,GAFIA,SDHAC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGL,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAmCE,IAAMM,EAAgB,WAC3B,MAAiCC,oBAAS,GAA1C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASP,EAASU,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAMMC,EAAa,SAACC,GAClBF,EAAYE,IAQRC,EAAiBP,GAAcG,IAAaX,EAASU,KACrDR,EA1CD,SACLA,EADK,GAGJ,IADCS,EACF,EADEA,SAAUH,EACZ,EADYA,WAENQ,EAAY,YAAOd,GAezB,OAbAc,EAAaC,MAAK,SAACC,EAAcC,GAC/B,OAAQR,GACN,KAAKX,EAASoB,SACZ,OAAOF,EAAaG,cAAcF,GAEpC,KAAKnB,EAASsB,OACZ,OAAOJ,EAAaK,OAASJ,EAAYI,OAE3C,QACE,OAAO,MAINf,EACHQ,EAAaQ,UACbR,EAqBUS,CACZpB,EAAiB,CAAEG,aAAYG,aAGjC,OACE,sBAAKe,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEZ,KAAK,SACLY,UAAWC,IACT,iBACA,CACE,WAAYhB,IAAaX,EAASoB,WAGtCQ,QAAS,WACPf,EAAWb,EAASoB,WATxB,iCAeA,wBACEN,KAAK,SACLY,UAAWC,IACT,oBACA,CACE,WAAYhB,IAAaX,EAASsB,SAGtCM,QAAS,WACPf,EAAWb,EAASsB,SATxB,4BAeA,wBACER,KAAK,SACLY,UAAWC,IACT,oBACA,CACE,YAAanB,IAGjBoB,QA3DmB,WACzBnB,GAAW,SAAAoB,GAAO,OAAKA,MAkDnB,qBAaCd,GACC,wBACED,KAAK,SACLY,UAAU,4BACVE,QA5De,WACvBhB,EAAYZ,EAASU,MACrBD,GAAW,IAuDL,sBAUJ,cAAC,EAAD,CAAWP,MAAOA,QElIxB4B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.845ec6fc.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\nimport { GoodsList } from './components/GoodsList';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((previousGood, currentGood) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return previousGood.localeCompare(currentGood);\n\n      case SortType.LENGTH:\n        return previousGood.length - currentGood.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  return isReversed\n    ? visibleGoods.reverse()\n    : visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setReverse] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const handleReverseClick = () => {\n    setReverse(current => !current);\n  };\n\n  const sortByType = (type: SortType) => {\n    setSortType(type);\n  };\n\n  const handleResetClick = () => {\n    setSortType(SortType.NONE);\n    setReverse(false);\n  };\n\n  const isResetVisible = isReversed || sortType !== SortType.NONE;\n  const goods = getReorderedGoods(\n    goodsFromServer, { isReversed, sortType },\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-info',\n            {\n              'is-light': sortType !== SortType.ALPHABET,\n            },\n          )}\n          onClick={() => {\n            sortByType(SortType.ALPHABET);\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-success',\n            {\n              'is-light': sortType !== SortType.LENGTH,\n            },\n          )}\n          onClick={() => {\n            sortByType(SortType.LENGTH);\n          }}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-warning',\n            {\n              'is-light': !isReversed,\n            },\n          )}\n          onClick={handleReverseClick}\n        >\n          Reverse\n        </button>\n\n        {isResetVisible && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={handleResetClick}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <GoodsList goods={goods} />\n    </div>\n  );\n};\n","type Props = {\n  goods: string[];\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li\n        data-cy=\"Good\"\n        key={good}\n      >\n        {good}\n      </li>\n    ))}\n  </ul>\n);\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}